from .. import Availability, Class, Constant, Define, Method, Parameter, Type

gx_class = Class('{{ cl.name }}'{% if cl.handlename %},
                 handle_name='{{ cl.handlename }}'{% endif %}{% if cl.nogxh %},
                 no_gxh=True{% endif %}{% if cl.nocsharp %},
                 no_csharp=True{% endif %}{% if cl.nocpp %},
                 no_cpp=True{% endif %}{% if cl.description %},
                 doc={{ cl.description | clean_doc }}{% endif %}{% if cl.notes and not cl.notes == 'None' %},
                 notes={{ cl.notes | clean_doc }}{% endif %})


{% for definition in cl.definitions.definition %}
{% if loop.first %}
gx_defines = [
{% endif %}
    Define('{{ definition.name }}'{% if definition.constant %},
           is_constant=True{% endif %}{% if definition.single_constant %},
           is_single_constant=True{% endif %}{% if definition.null_handle %},
           is_null_handle=True{% endif %}{% if definition.description %},
           doc={{ definition.description | clean_doc(11) }}{% endif %}{% if definition.null_handle %}){% else %},
           constants=[
{% for defined_value in definition.defined_value %}
               Constant('{{ defined_value.name }}', value='{{ defined_value.val }}', type={{ defined_value.get_spec_type() }}{% if defined_value.description %},
                        doc={{ defined_value.description | clean_doc(24) }}{% endif %})                        {% if not loop.last %},
{% else %}

           ]){% endif %}{% endfor %}{% endif %}{% if not loop.last %},

{% else %}
]{% endif %}
{% endfor %}



gx_methods = {
{% for methodgroup in cl.methodgroups.methodgroup %}
    '{% if methodgroup.name and not methodgroup.name == 'None' %}{{ methodgroup.name }}{% else %}Miscellaneous{% endif %}': [

{% for method in methodgroup.method %}
        Method('{{ method.name }}'{% if cl.externalname %}, external_name='{{ cl.externalname }}'{% endif %}, module='{{ method.module }}', version='{{ method.available }}',
               availability={{ method.get_spec_lic() }}, {% if method.obsolete %}is_obsolete=True, {% endif %}{% if method.is_app() %}is_app=True, {% endif %}{% if method.guicall %}is_gui=True, {% endif %}{% if method.nogxh %}no_gxh=True, {% endif %}{% if method.nocsharp %}no_csharp=True, {% endif %}{% if method.nocpp %}no_cpp=True, {% endif %}

               doc={{ method.description | clean_doc(15) }},
               return_type={{ method.get_spec_ret_type() }}{% if method.returnval.description and not method.returnval.description == method.returnval.type and not method.returnval.description == 'Nothing' %},
               return_doc={{ method.returnval.description | clean_doc(15) }}{% endif %}{% for param in method.parameters.parameter %}{% if loop.first %},
               parameters = [
{% endif %}
                   Parameter('p{{ loop.index }}', type={{ param.get_spec_type() }}{% if param.is_var() %}, is_ref=True{% endif %}{% if param.is_val_type() %}, is_val=True{% endif %}{% if param.defaultlength %}, default_length='{{ param.defaultlength }}'{% endif %}{% if param.size_of_param %}, size_of_param='{{ param.size_of_param }}'{% endif %}{% if param.description and not param.description == param.type %},
                             doc={{ param.description | clean_doc(29) }}{% endif %}){% if not loop.last %},
{% else %}

               ]{% endif %}{% endfor %}){% if not loop.last %},
{% endif %}

{% endfor %}
    ]{% if not loop.last %},
{% else %}

}
{% endif %}
{% endfor %}


